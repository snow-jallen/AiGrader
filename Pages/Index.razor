@page "/"
@using AiGrader.Services
@using AiGrader.Models
@using AiGrader.Components
@inject ICanvasDataService CanvasDataService

<PageTitle>AI Grader</PageTitle>

<div class="main-layout">
    <div class="left-panel">
        <LeftNavigation OnAssignmentSelected="OnAssignmentSelected" />
    </div>
    <div class="main-content">
        <AssignmentDetails Assignment="_selectedAssignment" />
    </div>
</div>

<style>
    .main-layout {
        display: flex;
        height: calc(100vh - 80px);
        overflow: hidden;
    }
    
    .left-panel {
        width: 350px;
        flex-shrink: 0;
        background: linear-gradient(180deg, #f8f9fa 0%, #e9ecef 100%);
        border-right: 1px solid #dee2e6;
        box-shadow: 2px 0 10px rgba(0,0,0,0.1);
    }
    
    .main-content {
        flex: 1;
        overflow: hidden;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        position: relative;
        display: flex;
        align-items: stretch;
    }
    
    .main-content::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-opacity='0.03'%3E%3Cpolygon fill='%23ffffff' points='50 0 60 40 100 50 60 60 50 100 40 60 0 50 40 40'/%3E%3C/g%3E%3C/svg%3E") center/50px;
        pointer-events: none;
    }
</style>

@code {
    private DbAssignment? _selectedAssignment;
    
    private Task OnAssignmentSelected(DbAssignment assignment)
    {
        _selectedAssignment = assignment;
        StateHasChanged();
        return Task.CompletedTask;
    }
}