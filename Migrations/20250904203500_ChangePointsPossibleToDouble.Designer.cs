// <auto-generated />
using System;
using AiGrader.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AiGrader.Migrations
{
    [DbContext(typeof(AiGraderDbContext))]
    [Migration("20250904203500_ChangePointsPossibleToDouble")]
    partial class ChangePointsPossibleToDouble
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("AiGrader.Models.DbAnalysisResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnalysisJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.ToTable("AnalysisResults");
                });

            modelBuilder.Entity("AiGrader.Models.DbAssignment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DueAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasDownloadedSubmissions")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastSynced")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocalSubmissionsPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<double?>("PointsPossible")
                        .HasColumnType("REAL");

                    b.Property<bool>("Published")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalSubmissions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UngradedCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("AiGrader.Models.DbAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDownloaded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalFilePath")
                        .HasColumnType("TEXT");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("AiGrader.Models.DbCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomName")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastSynced")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkflowState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("AiGrader.Models.DbSubmission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastSynced")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocalFilePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorkflowState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("AiGrader.Models.DbAnalysisResult", b =>
                {
                    b.HasOne("AiGrader.Models.DbAssignment", "Assignment")
                        .WithMany()
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("AiGrader.Models.DbAssignment", b =>
                {
                    b.HasOne("AiGrader.Models.DbCourse", "Course")
                        .WithMany("Assignments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("AiGrader.Models.DbAttachment", b =>
                {
                    b.HasOne("AiGrader.Models.DbSubmission", "Submission")
                        .WithMany("Attachments")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("AiGrader.Models.DbSubmission", b =>
                {
                    b.HasOne("AiGrader.Models.DbAssignment", "Assignment")
                        .WithMany("Submissions")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("AiGrader.Models.DbAssignment", b =>
                {
                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("AiGrader.Models.DbCourse", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("AiGrader.Models.DbSubmission", b =>
                {
                    b.Navigation("Attachments");
                });
        }
    }
}